import streamlit as st
import os
import subprocess
import time
import hydralit_components as hc
from ultralytics import YOLO
import moviepy.editor as moviepy    

def predict_similarity(vacancy, cv):
    time.sleep(5)
    return 0.92342334

st.markdown(
        f"<div style='text-align: left;'><h1>–û–ø—Ä–µ–¥–ª–µ–Ω–∏–µ —Å—Ç–µ–ø–µ–Ω–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ —Ä–µ–∑—é–º–µ</h1>\n<h2>–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</h2></div>",
        unsafe_allow_html=True)

vacancy = st.text_area("–¢–µ–∫—Å—Ç –≤–∞–∫–∞–Ω—Å–∏–∏")

cv = st.text_area("–¢–µ–∫—Å—Ç —Ä–µ–∑—é–º–µ")

run_model = st.button("–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç–µ–ø–µ–Ω—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è", use_container_width=True)
if run_model:
    if not vacancy or not cv:
        st.error('–ü–æ–ª—è —Å–æ –≤—Ö–æ–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–µ –ø—É—Å—Ç—ã–µ', icon="üö®")
    else:
        with st.container():
            with hc.HyLoader('–û–ø—Ä–µ–¥–µ–ª—è–µ–º...', hc.Loaders.standard_loaders, index=[1]):
                pred = predict_similarity(vacancy, cv)

        st.markdown(
            f"<div style='text-align: left;'><h2>–í–∞–∫–∞–Ω—Å–∏—è –∏ —Ä–µ–∑—é–º–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–∞ {pred * 100:.2f}%</h2></div>",
            unsafe_allow_html=True)
